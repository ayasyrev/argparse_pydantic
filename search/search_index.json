{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Argparse Pydantic","text":"<p>Config for argparse with pydantic model.</p> <p> </p> <p>Simple wrapper for python argparse. Use pydantic model for you app config. It gives you typed config instead of default Namespace from argparse.</p> <p>Tested on python 3.7 - 3.11</p> <p>WIP</p>"},{"location":"#install","title":"Install","text":"<p>Install from pypi:  </p> <p><code>pip install argparse_pydantic</code></p> <p>Or install from github repo:</p> <p><code>pip install git+https://github.com/ayasyrev/argparse_pydantic.git</code></p>"},{"location":"#base-use","title":"Base use.","text":"<p>We use python argparse to parse arguments from command line. So - just create parser as usual:</p> <pre><code>import argparse\n\nparser = argparse.ArgumentParser(prog=\"MyApp\")\n</code></pre> <p>Than create config for you app with Pydantic.</p> <pre><code>from pydantic import  BaseModel\n\n\nclass AppCfg(BaseModel):\n    echo: str\n</code></pre> <p>Now add argument to parser from you config.</p> <pre><code>from argparse_pydantic import add_args_from_model\n\nparser = add_args_from_model(parser, AppCfg)\n</code></pre> <p>So we got parser with arguments from config.</p> <p>It exactly like parser made classic way: <code>parser.add_argument(\"echo\")</code></p> <pre><code>parser.print_help()\n</code></pre> output <pre>usage: MyApp [-h] echo\n\n    positional arguments:\n      echo\n\n    options:\n      -h, --help  show this help message and exit\n    </pre> <p>Parse command line as usual.</p> <pre><code>args = parser.parse_args([\"argument from command line\"])\n</code></pre> <p>When we parse command line, we got Namespace object. Bat we can convert it to config object.</p> <pre><code>from argparse_pydantic import create_model_obj\n\ncfg = create_model_obj(AppCfg, args)\n</code></pre> <p>Now we got  config with type checks / validation ont type hinting when use it at IDE.</p> <pre><code>cfg\n</code></pre> output <pre>AppCfg(echo='argument from command line')</pre> <pre><code>cfg.echo\n</code></pre> output <pre>'argument from command line'</pre>"},{"location":"#examples","title":"Examples","text":"<p>You can see examples at <code>examples</code> folder - Same examples as at python docs and tutorial for argparse.  </p>"}]}